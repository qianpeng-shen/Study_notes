大作业：
把一个文件夹下面的文件，拷贝到另一个文件夹下面；
（要求：
	1.使用多进程(进程池)或者多线程(线程池)来完成；
	2.怎么证明拷贝的文件是完整的；
	3.这个文件夹下的文件不能少于1000个，
	文件的类型需要多元化，有图片，有视频，有二进制文件
	4.可以加入进度条的考虑；
	5.不要求今天完成，可以在第三天完成作业
）；

GET:
当我们在做GET请求时，事实上需要做一次urlencode
		https://www.baidu.com/s?wd=python%20%E7%88%AC%E8%99%AB&oq=python%2520%25E7%2588%25AC%25E8%2599%25AB
urlencode in python:
	wd = {"wd":keyword} #Python爬虫
	wd = urllib.parse.urlencode(wd) #url encode 编码
	# wd=Python%E7%88%AC%E8%99%AB


面试题：
    输入一个英文的句子，翻转句子中单词的顺序，
但单词内字符的顺序不变。句子中的单词以空格符
分开。为了简单起见，
标点符号和普通的字母一样对待。(原地操作:
不允许用辅助空间怎么办)
比如：输入"I am a student."  --> .tneduts a ma I --> student. a am I
      输出"student. a am I"

POST:
访问有道翻译，输入hello,
返回json的信息：
	{"translateResult":[[{"tgt":"你好","src":"hello"}]],
"errorCode":0,"type":"en2zh-CHS",
"smartResult":{"entries":["","n. 表示问候， 
惊奇或唤起注意时的用语\r\n","int. 喂；
哈罗\r\n","n. (Hello)人名；
(法)埃洛\r\n"],"type":1}}

Get：是为了从服务器上获取信息，传输给服务器的数据的过程不够安全，
数据大小有限制；
Post：向服务器传递数据，传输数据的过程是安全的，
大小理论上没有限制；

Selenium+Chrome浏览器:
     安装Selenium：
	 在anaconda prompt中:
	(base) C:\Users\Python>conda install selenium
看起来很美，从理论上来说，只要用户能访问的数据，都可以抓取到。
但是：从时间，空间，及效率上来说，这个方案都有其缺陷。
结论：
	1.如果可以使用get,post方法来获取数据，不要使用Selenium+浏览器方案；
	2.实在没有办法抓取到数据的时候再使用Selenium+浏览器的方案，
生产环境中使用headless的浏览器；
补充说明：
    由于Python的进程和浏览器的进程是两个不同的进程，所以在Python的
进程退出时，可以尝试使用browser.close()让浏览器关闭，但是不能保证
其一定关闭，这样就可能造成资源泄露。一个补救的措施就是：
在适当的时候，kill掉相关的浏览器进程(Linux命令)；

爬虫所做的事：
	爬虫要尽量模拟的看起来就像是真正的用户在浏览器上访问
	服务器网站的行为。

RSA算法：
    RSA加密算法是一种非对称加密算法；
加密算法不重要，秘钥才能保密；
秘钥:如果加解密用同一个秘钥，对称加密；
     如果加解密用两个不同的秘钥，非对称加密；    
	      有两个秘钥：公钥，私钥；
		      用公钥加密的数据需要使用私钥来解；
              用私钥加密的数据需要使用公钥来解；
			  公钥可以随便给别人，私钥不能给；
HTTPS使用非对称加密：	
     服务器  客户端浏览器；
通信的过程：服务器把数据用私钥加密，
把加密之后的数据和公钥一起发给客户端；完成一次通信；
客户端把要发给服务器的数据用服务器所给的公钥加密，
然后传给服务器；完成一次通信，服务器可以用私钥来解密；
    n = p*q，当n是一个巨大的数时，理论上在有限的时间
之内这个两个质数p,q是分解不出来。
p,q是私钥，n是公钥； 
abcde
bcdef

作业
   1）用Selenim+浏览器的方案登录进http://www.renren.com/
   2）完善info方法，可以支持中文doc string;




