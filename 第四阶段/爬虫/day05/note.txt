新浪微博数据抓取：
	微信是比较封闭，微博的数据是比较开放的，可以抓取；
微博的数据：
	1.人的信息，关注列表，粉丝列表；
可以从一个大V作为入口来抓，
粉丝(越多越好)/关注(越少越好)
博文太少不值得抓，太多要考虑一下是否是微商或者
广告；
    2.微博上博文信息；
可以参考这篇文章的点赞数量，评论数量，
转发数量等等来决定这篇博文是否要抓取；
思考：怎么甄别僵尸粉？

抓取的过程：
	1）需要登录进去；
	2）给定一个大V作为入口，比如姚晨，王思聪等的微博作为
	入口，来进去抓取；
	3）抓取人的信息和博文信息；
把关注的人的入口地址做成一个队列，以便
获取微博要爬取的内容；
可以尝试用两个不同的进程，开启两个浏览器，
分别进行博文和人的信息抓取，以提升效率；
    4）技术上还需要解决：
	   翻页：找到href，直到找不到下一页信息；

cookie,session作用？
	用户曾经访问过个这个网站，我们需要在HTTP协议
之外用一些额外的信息和技术来标识这个用户曾经来过；
为了让用户体验更好；所以我们的爬虫程序可以巧妙的
利用这个漏洞来达到登录获取信息的效果；


面试题：
输入参数n， n=4
输出：n*n 
	10 11 12 1
	9  16 13 2
	8  15 14 3
	7  6  5  4
	
myArray = np.zeros((n,n),dtype=np.int16	
num = 1
i = 0   #行标
j = n-1 #列标
myArray[i][j] = 1
while num <= n*n:
  #第一步，上-》下
  while(i+1 < n and myArray[i+1][j]==0):
   i += 1
   num += 1
   myArray[i][j] = num   
  while 第二步，右-》左；
  while 第三步，下-》上；
  while 第四步，左-》右；

1, 2, 3, 4
5, 6, 7, 8

在Python中做高维度的矩阵运算,使用原生的list效率
很低下，所以我们需要借助第三方的库来帮助我们完成
高性能的运算。我们可以使用numpy。

numpy中如何来表达矩阵：
myArray = np.zeros((4,4),dtype=np.int16)
# 建立了一个维度是4*4的矩阵，
# dtype表达的是数据的类型,是C语言中的整数类型，
#用16位来表达一个整数；
myArray
Out[16]: 
array([[0, 0, 0, 0],
       [0, 0, 0, 0],
       [0, 0, 0, 0],
       [0, 0, 0, 0]], dtype=int16)

输入n=5，
输出:
    1
   121
  12321
 1234321
123454321


Python 为什么使用Urllib时会有默认的UA：
class OpenerDirector:
    def __init__(self):
        client_version = "Python-urllib/%s" % __version__
        self.addheaders = [('User-agent', client_version)]

		
使用tesseract做OCR 验证码识别
安装tesseract
sudo apt-get install tesseract-ocr
sudo pip install pytesseract

测试：tesseract
from pytesseract import *
	
在captchaTest.py程序中：
	有一张验证码的图片：
	    去噪音，找出验证码的色彩；
		1.背景色与前景色的区分；
		2.提取出一个个字符；
		3.使用余弦相似度来计算两个字符之间的相似度；
https://blog.csdn.net/whiterbear/article/details/45583883
        4.得到当前字符最大概率匹配的样本集中的字符；

打码平台运作的方式：
		1）首先在打码平台注册账号，获取到
合法的Key，ID等信息；
        2）使用这些Key，ID去调对方的API：
		   读取文件成字节流，做一次Base64转码，
去调API接口，返回结果；
        3）得到结果，进行下一步操作；如果出错，
根据返回结果来判断如果排错；
如果使用图像识别的技术实在搞不定验证码，
可以求助打码平台；
		
	








	
	
	
	
	